# generated by eelbrain/scripts/make_example_tests.py
import logging
import os
import re
import shutil
from tempfile import mkdtemp

import mne
from nose import SkipTest

from eelbrain import plot

# exclude files with those names:
EXCLUDE = ('make_reports.py',)
DATASETS = {
    'mne_sample': bool(mne.datasets.sample.data_path(download=False))
}

dir_ = os.path.dirname(__file__)
examples_dir = os.path.join(dir_, '..', '..', 'examples')
examples_dir = os.path.abspath(examples_dir)


def run_example(example_path, name):
    "Run the example script at ``filename``"
    dirname, example_filename = os.path.split(example_path)

    # read example
    with open(example_path) as fid:
        text = fid.read()

    # check for explicit skip
    if re.findall("^# skip test", text, re.MULTILINE):
        return

    # check for required modules
    required_modules = re.findall("^# requires: (\w+)", text, re.MULTILINE)
    for module in required_modules:
        try:
            __import__(module)
        except ImportError:
            raise SkipTest("required module not available: %s" % module)

    # check for required datasets
    required_datasets = re.findall("^# dataset: (\w+)", text, re.MULTILINE)
    for dataset in required_datasets:
        if not DATASETS[dataset]:
            raise SkipTest("required dataset not available: %s" % dataset)

    # find required files
    required_files = re.findall("^# file: (\w+.\w+)", text, re.MULTILINE)

    # reduce computational load
    text = text.replace("n_samples = 1000", "n_samples = 2")

    # copy all files to temporary dir
    tempdir = mkdtemp()
    try:
        exec_path = os.path.join(tempdir, example_filename)
        with open(exec_path, 'w') as fid:
            fid.write(text)
        for filename in required_files:
            src = os.path.join(dirname, filename)
            shutil.copy(src, tempdir)

        # execute example
        logging.info("executing %s from %s" % (name, tempdir))
        plot.configure(show=False)
        os.chdir(tempdir)
        execfile(example_filename, {})
    finally:
        # delete temporary files
        shutil.rmtree(tempdir)


def test_examples():
    for dirpath, _, filenames in os.walk(examples_dir):
        relpath = os.path.relpath(dirpath, examples_dir)
        for filename in filenames:
            if filename.endswith('.py') and filename not in EXCLUDE:
                example_path = os.path.join(dirpath, filename)
                example_name = os.path.join(relpath, filename)
                yield run_example, example_path, example_name
